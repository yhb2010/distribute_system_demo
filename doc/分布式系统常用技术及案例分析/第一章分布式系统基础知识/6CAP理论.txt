理解cap理论最简单的方式是想象两个节点分处分区的两侧。允许至少一个节点更新状态会导致数据不一致，即丧失了c性质。如果为了保证数据一致
性，将分区一侧的节点设置为不可用，那么又丧失了a性质。除非两个节点可以互相通信，才能即保证c又保证a，但这又丧失了p性质。一般来说跨区域
的系统，设计师无法舍弃p性质，那么就只能在数据一致性和可用性上做一个选择。不确切的说，nosql运动的主题是创造各种可用性优先、数据一致性
其次的方案，而传统的数据库坚守acid特性。

base来自于互联网的电子商务领域的实践，它是基于cap理论演化来的，核心思想是即便不能达到强一致性，但可以根据应用的特点采用适当的方式来
达到最终一致性的效果。base是对cap的c和a的延伸。base的含义如下：
基本可用
软状态\柔性事务，即状态可以有一段时间的不同步
最终一致性
base是反acid的，它完全不同于acid的模型，牺牲强一致性，获得基本可用性和柔性可靠性并要求达到最终一致性。